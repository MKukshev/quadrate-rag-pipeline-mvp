version: "3.9"

services:
  qdrant:
    image: qdrant/qdrant:latest
    ports: ["6333:6333"]
    volumes:
      - qdrant_storage:/qdrant/storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  ollama:
    image: ollama/ollama:latest
    ports: ["11434:11434"]
    volumes:
      - ollama_models:/root/.ollama
    mem_limit: 16g
    restart: unless-stopped
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports: ["8000:8000"]
    environment:
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_COLLECTION=docs
      - EMBED_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - KEYWORD_INDEX_DIR=/data/whoosh_index
      - LLM_MODE=ollama
      - LLM_MODEL=llama3.1:8b
      - DOC_TYPE_MODEL_PATH=/app/backend/models/doc_type_classifier.joblib
      - LLM_TIMEOUT=300
      - CHUNK_TOKENS=400
      - CHUNK_OVERLAP=50
      - CONTEXT_MAX_CHUNKS=6
      - CACHE_ENABLED=true
      - CACHE_TTL_SECONDS=600
      - CACHE_MAX_ITEMS=512
    volumes:
      - backend_data:/data
      - ./backend/models:/app/backend/models
      - ./docs:/app/docs:ro
    depends_on:
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports: ["80:80", "443:443"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    profiles:
      - with-proxy

volumes:
  qdrant_storage:
  ollama_models:
  backend_data:

